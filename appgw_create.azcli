# Variables
appgw_rg=akstest2
appgw_loc=eastus
appgw_pipname=appgwpip
dnsname=kuardgw
dnszone=cloudtrooper.net
dnsrg=dns
appgw_name=appgw
sku=Standard_v2
cookie=Disabled
backenddnsname=kuard
backendfqdn="$backenddnsname"."$dnszone"

# Create RG
az group create -n $appgw_rg -l $appgw_loc

# Create vnet
# az network vnet create -n $vnet -g $appgw_rg --address-prefix 10.0.0.0/16 --subnet-name $appgw_subnet_name --subnet-prefix 10.0.1.0/24

# Alternatively create subnet in the vnet
az network vnet subnet create --vnet-name $vnet --name $appgw_subnet_name -g $appgw_rg --address-prefixes 10.13.123.0/24

# Create PIP
az network public-ip create -g $appgw_rg -n $appgw_pipname --sku Standard
#fqdn=$(az network public-ip show -g $appgw_rg -n $appgw_pipname --query dnsSettings.fqdn -o tsv)

# If using a DNS entry, create A record pointing to the PIP
ip=$(az network public-ip show -g $appgw_rg -n $appgw_pipname --query ipAddress -o tsv)
fqdn="$dnsname"."$dnszone"
echo "Creating A-record $fqdn for IP $ip"
# Create DNS names, these commands are idempotent
az network dns record-set a create -g $dnsrg -z cloudtrooper.net -n $dnsname
az network dns record-set a add-record -g $dnsrg -z cloudtrooper.net -n $dnsname -a $ip

# Create GW with sample config for port 80
az network application-gateway create -g $appgw_rg -n $appgw_name --capacity 2 --sku $sku \
    --frontend-port 80 --routing-rule-type basic \
    --http-settings-port 80 --http-settings-protocol Http \
    --public-ip-address $appgw_pipname --vnet-name $vnet --subnet $appgw_subnet_name \
    # --servers "$backendfqdn" \
    --no-wait

# Create probe and HTTP settings
az network application-gateway probe create -g $appgw_rg --gateway-name $appgw_name \
  --name myprobe --protocol Https --host-name-from-http-settings \
  --match-status-codes 200-399
az network application-gateway http-settings create -g $appgw_rg --gateway-name $appgw_name \
  --name mysettings --protocol https

# Wait for GW to be created
rgs=$appgw_rg
ongoing=true
while [[ "$ongoing" == "true" ]]
do
  for thisrg in $appgw_rgs
  do
    ongoing=false                                                                                                                                                                                     ucSBq97xxeuidrAI0805           appgwtest       None
    echo "Checking RG $thisrg..."                                                                                                                                                                     525235031              appgwtest       None
    running=$(az group deployment list -g $thisrg --query "[?properties.provisioningState=='Running'].[properties.timestamp]" -o tsv | wc -l)
    if [[ $running -gt 0 ]]                                                                                                                                                                           ateway-20190525160351          appgwtest       None
    then
      echo "$running running deployments found in RG $thisrg"
      ongoing=true
    else
      echo "No running deployments found in RG $thisrg"
    fi
  done
  # Only sleep if we need to go back to the loop
  if [[ "$ongoing" == "true" ]]
  then
    sleep 10
  fi
done

# Troubleshoot
az network application-gateway list -g $appgw_rg -o table
az network application-gateway http-listener list -g $appgw_rg --gateway-name $appgw_name -o table
az network application-gateway frontend-ip list -g $appgw_rg --gateway-name $appgw_name -o table
az network application-gateway probe list -g $appgw_rg --gateway-name $appgw_name -o table
az network application-gateway address-pool list -g $appgw_rg --gateway-name $appgw_name -o table
az network application-gateway rule list -g $appgw_rg --gateway-name $appgw_name -o table
az network application-gateway rule show -g $appgw_rg --gateway-name $appgw_name -n rule1
az network application-gateway rule list -g $appgw_rg --gateway-name $appgw_name -o table
rule=$(az network application-gateway rule list -g $appgw_rg --gateway-name $appgw_name --query '[0].name' -o tsv)
az network application-gateway rule show -g $appgw_rg --gateway-name $appgw_name -n $rule
az network application-gateway url-path-map list -g $appgw_rg --gateway-name $appgw_name -o table
az network application-gateway http-settings list -g $appgw_rg --gateway-name $appgw_name -o table


